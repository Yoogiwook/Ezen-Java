!SESSION 2022-04-06 09:12:29.736 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file C:\works\.metadata\.bak_0.log
Created Time: 2022-04-06 11:26:11.249

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-06 11:26:11.249
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-06 11:26:11.250
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:12.075
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		else (num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-06 11:26:12.076
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-06 11:26:12.076
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:12.702
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		else (num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-06 11:26:12.702
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-06 11:26:12.703
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:13.542
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		else (num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-06 11:26:13.543
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-06 11:26:13.543
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:14.750
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		else (num < 60);
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-06 11:26:14.751
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-06 11:26:14.751
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:14.762
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		else (num < 60);
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-06 11:26:14.763
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-06 11:26:14.763
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:16.762
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		else (num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-06 11:26:16.763
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-06 11:26:16.763
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:16.772
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		else (num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-06 11:26:16.773
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-06 11:26:16.773
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:18.026
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		else (num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-06 11:26:18.027
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-06 11:26:18.027
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:25.140
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		else (num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-06 11:26:25.141
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-06 11:26:25.141
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:25.271
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		else (num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-06 11:26:25.272
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-06 11:26:25.272
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:25.278
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		else (num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-06 11:26:25.279
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-06 11:26:25.279
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:55.822
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		(num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-06 11:26:55.822
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-06 11:26:55.822
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:56.832
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
(num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-06 11:26:56.833
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-06 11:26:56.833
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:56.842
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
(num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-06 11:26:56.842
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-06 11:26:56.843
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:57.843
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		(num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-06 11:26:57.844
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-06 11:26:57.844
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-06 11:26:57.853
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {

				// 조건문 if, switch
		// 정수 입력받아서 -> 90이상 A 80 B 70 C 60 D 60 이하 F
		Scanner sc = new Scanner(System.in);
		
		int num = sc.nextInt();
			
		if (num >= 90)  {
			System.out.println("A학점");
		}
		else if(num < 90 && num >= 80)
			System.out.println("B학점");		
		else if(num < 80 && num >= 70)
			System.out.println("C학점");
		else if(num < 70 && num >= 60)
			System.out.println("D학점");
		(num < 60)
			System.out.println("F학점");
		// else 는 두가지 결과만 표현할 때, else if 는 결과가 여러가지일경우
		
		
		
				// 대입 연산자
//		int i=10;
//		
//		i <<= 3;  // i +=3; 둘 다 같음
//		
//		System.out.println(i);
		
		
		
		
				//  조건 연산자 중요
//		int num1 = 1;
//		int num2 = 5;
//		
//		//int num3 = num1>num2 ? num1 : num2;
//		
//		//  조건	   조건참	  조건거짓
//		System.out.println(num1>num2 ? num1 : "abc");
		
				
				//  쉬프트 연산자
//		System.out.println(8 << 2); // 1000   <-- 2bit 이동 100000 32
//		System.out.println(8 >> 2); // 1000   --> 2bit shift 0010! 2
					
		
//		//키보드로 두 정수 입력을 받아서, 총점과 평균을 출력한다.
//		Scanner sc = new Scanner(System.in);
//		
//		String n1 = sc.nextLine();
//		String n2 = sc.nextLine();
//		
//		int num1 = Integer.parseInt(n1);
//		int num2 = Integer.parseInt(n2);
//		
//		int sum = num1 + num2;
//		double ave = sum / 2.0;
//		
//		System.out.println("합계 : " + sum + "\n평균 : " + ave);
		
		
		
//		int num = 4000;  //4000초 --> 시 분 초
//		
//		int h=0;
//		int m=0;
//		int s=0;
//		
//		h = num / 3600;
//		m = num % 3600 / 60;
//		s = num % 60;
//		
//		System.out.println(num + "초는 " + h + "시 " + m + "분 " + s + "초 입니다.");
		
		
		
//		int x = 0xAB;
//		int y = 0xF;
//		
//		System.out.println(x);
//		
//		System.out.printf("x = %#X \t\t%s%n", x, toBinaryString (x));
//		System.out.printf("y = %#X \t\t%s%n", y, toBinaryString (y));
//		System.out.printf("%#X | %#X = %#X \t%s%n" ,
//								x, y, x | y, toBinaryString (x | y));
//		System.out.printf("%#X & %#X = %#X \t%s%n" ,
//								x, y, x & y, toBinaryString (x & y));
//		System.out.printf("%#X ^ %#X = %#X \t%s%n" ,
//								x, y, x ^ y, toBinaryString (x ^ y));
//		System.out.printf("%#X ^ %#X ^ %#X = %#X %s%n" ,
//						x, y, y, x ^ y ^ y, toBinaryString (x ^ y ^ y));
//		
//	}
//	
//	static String toBinaryString(int x) {
//		String zero = "00000000000000000000000000000000";
//		String tmp = zero + Integer.toBinaryString(x);
//		return tmp.substring(tmp.length()-32);




//		int a = 30;
//		int b = 5;
//		
//		if ( a>20 || b>5)    // if ( a>20(1시간) && b>5(5초) )
//							 // &&연산자를 사용시 연산 소요시간이 적은것을 왼쪽으로
//			System.out.println("만족");
//		
//		System.out.println("불만족");
		
				
		
		
//		Scanner scanner = new Scanner(System.in);
//		
//		//문자 'a' / 문자열 : "korea" 
//		char ch = ' ';
//		
//		String str = "korea";
//		ch = str.charAt(2);
//		
//		System.out.printf("문자를 하나 입력하세요.>");
//		
//		String input = scanner.nextLine();
//		ch = input.charAt(0);
//		
//		if('0'<= ch && ch <= '9') {
//			System.out.printf("입력하신 문자는 숫자입니다.\n");
//		}	
//		
//		if(('a'<= ch && ch <='z') || ('A'<= ch && ch<= 'Z')) {
//			System.out.printf("입력하신 문자는 영문자입니다.\n");
//		}
		

		
		
//		char ch = 95;
//		
//		
//		System.out.println((('a'<=ch && ch <= 'z') || ('A'<=ch && ch <='Z')));
//							     //97 ~ 122        ||        65 ~ 90
		
		
		
//		int a = 1;
//		int b = 0;
//		
//		int i = 18;
//		
//		System.out.println(a>0 && b>0);
//		System.out.println(a>0 || b>0);
//		System.out.println( !(a>0 || b>0));
//										//6, 12, 18... --> 3, 9, 15 
//		System.out.println(i%2 ==0 || (i%3 ==0 && i%6 !=0) );
		
		
		
		
//		String str1 = "abc";
//		String str11 = "abc";
//		
//		System.out.println("aaaa : " + (str1 == str11));
//
//		String str2 = new String("abc");	
//		String str3 = new String("abc");
//		//클래스는 객체를 생성해야한다. new 연산자로 생성
//		System.out.println("bbbb : " + (str2 == str3));
//		
//		System.out.printf("\"abc\"==\"abc\" ? %b%n", "abc" == "abc");
//		System.out.printf(" str1==\"abc\" ? %b%n", str1 == "abc");
//		System.out.printf(" str2==\"abc\" ? %b%n", str2 == "abc");
//		System.out.printf("str1.equals (\"abc\") ? %b%n", str1.equals("abc"));
//		System.out.printf("str2.equals (\"abc\") ? %b%n", str2.equals("abc"));
//		System.out.printf("str2.equals (\"ABC\") ? %b%n", str2.equals("ABC"));
//		System.out.printf("str2.equalsIgnoreCase(\"ABC\") ? %b%n",
//												str2.equalsIgnoreCase("ABC"));
		//equals 객체를 무시하고 내용물만 보고 비교
		//equalsIgnoreCase 대소문자 구분 없이 비교
		
		
		
		
//		System.out.printf("10 == 10.0f \t %b\n", 10 == 10.0f);
//		System.out.printf("'0' == 0    \t %b\n", '0' == 0);
//		System.out.printf("'A' == 65   \t %b\n", 'A' == 65);
//		System.out.printf("'A' > 'B'   \t %b\n", 'A' == 'B');
//		System.out.printf("'A'+1 != 'B'   \t %b\n", 'A'+1 != 'B');
		
		
		
		
		
//		int x = 10;
//		int y = 8;
//		
//		System.out.println(x > y);
//		System.out.println(x < y);
//		System.out.println(x >= y);   // >= 허용  => 불가능
//		System.out.println(x <= y);   // <= 허용  =< 불가능
//		
//		System.out.println(x == y);   // 두 값이 같냐
//		System.out.println(x != y);   // 두 값이 다르냐
		
		
		
		
		
//		double pi = 3.141592;
//		double shortPi = pi * 1000;
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000);
//		
//		System.out.println(shortPi);
//		
//		shortPi = Math.round(pi * 1000) / 1000.0;
//		
//		System.out.println(shortPi);
		
		
		
		
//		double pi = 3.141592;
//		double shortpi = Math.round(pi*1000) / 1000.0;
//		System.out.println(shortpi);
		
		
		
		
//		float pi = 3.14159f;  //3.141
//		
//		float result = (int)(pi*1000) / 1000f;
//		
//		System.out.println(result);
//		
//		//3.142
//		
//		float result2 = (int)(pi*1000+0.5) / 1000f;
//		
//		System.out.println(result2);
		
		
		
		
//		char c = 'a';
//		for(int i=0; i<26; i++)  { 
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = 'A';
//		for(int i=0; i<26; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
//		
//		c = '0';
//		for (int i=0; i<10; i++)  {
//			System.out.print(c++);
//		}
//		System.out.println();
		
		
		
		
//		char c1 = 'a';
//		
//		char c2 = (char)(c1 + 1);
//		
//		char c3 = 'a' - 32;
//		
//		System.out.println(c1);
//		System.out.println(c2);
//		System.out.println(c3);
		
		
		
//		char a = 'a';	//65
//		char d = 'd';	//68
//		char zero = '0';
//		char two = '2';
//		
//		System.out.printf("'%c' - '%c' = %d%n", d, a, d -a);
//		System.out.printf("'%c' - '%c' = %d%n", two, zero, two - zero);
//		System.out.printf("'%c'=%d%n", a, (int)a);
//		System.out.printf("'%c'=%d%n", d, (int)d);
//		System.out.printf("'%c'=%d%n", zero, (int)zero);
//		System.out.printf("'%c'=%d%n", two, (int)two);
		
		
		
//		int a= 10;
//		int b= 4;
//		
//		//정수 연산 정수 = 정수
//		//정수 연산 실수 = 실수
//		//실수 연산 실수 = 실수
//		System.out.println(a/0.0);
//		
//		System.out.println((double)a/b);
//		
//		System.out.println(a/(double)b);
//		
//		System.out.println((double)a/(double)b);
		
		
		
//		int num = 1;
//		int num2 = 0;
//		int num3 = 0;
//		
//		num = num +1; // 2
//		
//		num += 1; // 3
//		
//		num2 = ++num; // 전위형 4	 4 , 4
//		System.out.println(num + "," + num2);
//		
//		num3 = num++; // 후위형 5  5 , 4
//		
//		
//		System.out.println(num + "," + num3);
//		
//		
//		int i = 0;
//		int j = 0;
//		
//		i += 1;
//		j = i;    // j = ++i;	전위형
//		
//		int m = 0;
//		int n = 0;
//		
//		n = m;
//		m +=1;	  // n = m++;	후위형
		
		/*
		 * //객체 //객체 생성-->new 클래스로 객체 생성 
		 * Scanner sc = new Scanner(System.in);
		 * 
		 * 
		 * String name = sc.nextLine();
		 * 
		 * System.out.println(name); 
		 * // 
		 * //int num = sc.nextLine(); // 에러 
		 * //
		 * 
		 * String input = sc.nextLine(); 
		 * int num = Integer.parseInt(input);
		 * 
		 * System.out.println(num);
		 */		
		
		
		
		
		/*
		 * //이름, 나이 출력한다.
		 * 
		 * int age = 20; String name;
		 * 
		 * Scanner sc = new Scanner(System.in); 
		 * name = sc.nextLine();
		 * 
		 * System.out.printf("name : %s, age : %d\n",name, age);
		 * System.out.println("name : " + name + ", age : " + age); 
		 * //%s 문자열 , %d 정수
		 */
		
	
		
		/*
		 * int age = 2; 
		 * int age2 = 20; 
		 * int age3 = 200; 
		 * int max = 1000;
		 * 
		 * System.out.println("age :" + age + ", " + "max : " + max);
		 * 
		 * // "age : " + "20" ==> age : 20 
		 * System.out.printf("age  : %3d, max : %3d\n", age, max); 
		 * System.out.printf("age2 : %3d, max : %3d\n", age2, max);
		 * System.out.printf("age3 : %3d, max : %3d\n", age3, max); // \n <- 개행문자(줄바꾸기)
		 */		
		
		/*
		 * int oct = 010; 
		 * //8진수 int de = 10; 
		 * //10진수 int hex = 0x10; 
		 * //16진수 int bin =
		 * 0b1010; //2진수
		 * 
		 * // 2진법 1, 8진법 : 3bit 000~111 , 16진법 : 0000~1111
		 * 
		 * // 01/011 -> 13 (8진법) 
		 * // 0/1011 -> B(11(16진법))
		 * 
		 * 
		 * System.out.println(oct); 
		 * System.out.println(de); 
		 * System.out.println(hex);
		 * System.out.println(bin); 
		 * System.out.println("-------------------");
		 * System.out.println(Integer.toBinaryString(bin));
		 * System.out.println(Integer.toHexString(hex));
		 * System.out.println(Integer.toOctalString(oct));
		 * 
		 */
		
		/* boolean a = true; boolean b = false;
		 * 
		 * char c = 'k'; 
		 * // char cc = 'kk';
		 * 
		 * // final int I = 10; <- final 을 붙이면 I 값을 고정함 
		 * //int i = 10;
		 * 
		 * final int MAX = 100; 
		 * final int MIN = 0;
		 * 
		 * int kor = 90;
		 */
		
		/*
		 * short d = 35; // short 앞에 자동으로 (short) 가 붙어있음
		 * 
		 * float f = 10.2f; 
		 * // 실수 끝에는 f를 붙여줘야함 double fd = 10.5;
		 *//*
		 * int x = 10; int y = 20;
		 * 
		 * System.out.println("before x : " + x); 
		 * System.out.println("before y : " + y);
		 * 
		 * // int c; c = x; x = y; y = c; 
		 * System.out.println(x); 
		 * System.out.println(y);
		 * //
		 * 
		 * System.out.println("after x : " + x); 
		 * System.out.println("after y : " + y);
		 */
	

//	private static Object toBinaryString(int x) {
//		// TODO Auto-generated method stub
//		return null;



// 정수형	byte, short, int, long
//       1      2     4    8
// bit(0,1)
// byte(8bit)		00000000 ~ 11111111(0~256)
// Kbyte (1024byte)
// Mbyte (1024kbyte)
// Gbyte (1024mbyte)

//byte(1) -  -128 ~ 127
//short(2)   -32,768 ~ 32,767
//int(4)     -21억 ~ 21억
//long(8)    존나많음


/*int a,b;

a = 50000;

System.out.println(a);

short c = (short)a;  //강제형변환

int cc;  //4byte
short dd = 30000; //2byte

//  연산시에는 자료형이 일치해야한다.
cc = dd;   //자동형변환 dd 2byte를 4byte로 변환한 다음 대입

System.out.println(c);*/

    // 'A' , '1' ==> 문자(char) , "ABC" ==> 문자열(String)
	// '' ==> 사이에는 문자 1개

		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-06 11:26:57.854
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-06 11:26:57.854
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2022-04-07 09:22:55.851 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-04-07 09:23:05.694
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-07 09:23:05.694
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@715d82a0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@299cddbf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-07 09:23:11.421
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\108'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:23.963
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20) 	System.out.println(true);
//		2
		char ch1 = 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:46:23.965
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:46:23.965
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:23.972
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20) 	System.out.println(true);
//		2
		char ch1 = 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:23.973
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:23.974
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:24.913
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20) 	System.out.println(true);
//		2
		char ch1 = 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:24.914
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:24.914
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:27.519
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20) 	System.out.println(true);
//		2
		char ch1 = 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:27.520
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:27.520
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:29.479
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1 = 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:46:29.479
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:46:29.479
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:29.487
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1 = 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:29.487
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:29.488
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:29.521
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1 = 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:29.522
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:29.522
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:31.523
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1 = 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:31.524
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:31.524
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:33.141
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1 = 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:33.141
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:33.141
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:34.294
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1 = 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:34.294
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:34.295
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:35.992
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1; 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:46:35.993
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:46:35.993
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:35.999
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1; 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:36.000
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:36.000
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:37.999
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:46:38.000
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:46:38.000
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:38.006
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:38.007
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:38.007
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:41.008
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:46:41.009
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:46:41.009
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:41.016
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = 
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:41.016
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:41.016
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:42.517
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = 'x'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:46:42.518
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:46:42.518
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:42.524
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = 'x'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:42.525
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:42.525
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:50.530
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' '
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:46:50.531
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:46:50.531
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:54.040
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ''
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:46:54.041
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:46:54.041
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:54.048
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ''
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:54.048
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:54.049
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:56.049
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = '\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:46:56.050
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:46:56.050
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:56.150
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = '\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:56.151
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:56.152
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:57.173
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = '\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:57.173
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:57.174
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:59.562
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = '\t' || \
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:46:59.562
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:46:59.563
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:46:59.570
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = '\t' || \
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:46:59.571
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:46:59.571
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:01.071
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = '\t' || \n
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:01.072
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:01.072
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:01.079
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = '\t' || \n
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:01.080
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:01.080
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:02.083
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = '\t' || \n'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:02.083
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:02.084
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:03.095
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = '\t' || ''\n'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:03.096
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:03.097
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:03.104
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = '\t' || ''\n'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:03.104
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:03.105
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:15.113
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = '\t' || ''\n'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:15.114
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:15.115
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:16.615
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || ''\n'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:16.616
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:16.616
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:16.623
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || ''\n'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:16.624
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:16.624
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:18.953
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || ''\n'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:18.954
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:18.954
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:19.626
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || '\n'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:19.627
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:19.627
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:22.637
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || 'tn'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:22.637
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:22.638
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:22.644
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || 'tn'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:22.645
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:22.646
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:24.646
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || '\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:24.647
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:24.647
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:24.654
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || '\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:24.655
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:24.655
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:29.422
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || '\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:29.422
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:29.422
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:30.657
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || ch '\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:30.658
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:30.658
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:30.665
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || ch '\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:30.666
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:30.666
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:32.168
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || ch ='\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:32.169
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:32.169
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:32.175
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || ch ='\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:32.176
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:32.176
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:39.384
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 = ' ' || ch ='\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:39.384
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:39.384
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:40.185
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch ='\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
