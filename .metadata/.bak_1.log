!SESSION 2022-04-07 09:22:55.851 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file C:\works\.metadata\.bak_0.log
Created Time: 2022-04-07 12:47:40.187

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:40.187
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:40.187
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:40.194
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch ='\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:40.194
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:40.195
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:42.695
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch = ='\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:42.696
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:42.696
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:42.703
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch = ='\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:42.704
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:42.704
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:43.703
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch ='\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:43.704
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:43.705
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:43.708
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch =='\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:43.709
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:43.709
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:44.411
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:44.412
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:44.412
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:44.708
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:44.709
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:44.709
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:48.624
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t'
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:48.625
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:48.625
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:50.720
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:50.721
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:50.721
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:50.727
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:50.728
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:50.728
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:54.230
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
		3
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:54.231
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:54.231
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:54.238
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
		3
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:54.238
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:54.245
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:56.239
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:47:56.240
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:47:56.240
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:47:56.247
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:47:56.247
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:47:56.248
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:02.252
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:02.252
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:02.253
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:02.287
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:02.288
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:02.288
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:07.968
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:07.969
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:07.969
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:09.195
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:09.195
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:09.196
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:10.766
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
		int x = 10;
		(10 < x && x < 20);
		int x = 10;
		(10 < x && x < 20);
		int x = 10;
		(10 < x && x < 20);
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:10.767
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:10.767
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:10.774
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
		int x = 10;
		(10 < x && x < 20);
		int x = 10;
		(10 < x && x < 20);
		int x = 10;
		(10 < x && x < 20);
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:10.774
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:10.775
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:12.774
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:12.775
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:12.775
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:12.782
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:12.782
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:12.782
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:14.784
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
		int x = 10;
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:14.785
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:14.785
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:16.293
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:16.294
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:16.294
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:16.300
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:16.301
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:16.301
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:17.252
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:17.253
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:17.253
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:18.084
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:18.085
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:18.085
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:18.859
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:18.860
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:18.860
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:21.805
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		(10 < x && x < 20);
		int x = 10;
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:21.806
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:21.806
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:21.812
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		(10 < x && x < 20);
		int x = 10;
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:21.812
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:21.813
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:22.813
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:22.813
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:22.813
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:24.145
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
		int x = 10;
		(10 < x && x < 20);
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:24.146
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:24.146
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:26.823
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:26.824
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:26.824
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:27.016
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:27.017
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:27.017
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:29.832
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:29.833
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:29.833
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:29.898
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:29.899
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:29.899
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:31.022
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:31.022
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:31.023
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:33.343
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:33.344
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:33.344
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:33.595
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:33.596
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:33.597
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:35.721
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:35.722
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:35.722
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:36.855
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식

		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:36.856
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:36.856
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:37.863
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:37.864
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:37.864
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:37.905
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:37.906
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:37.906
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:41.882
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:41.883
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:41.883
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:41.889
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:41.890
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:41.890
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:45.391
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x')
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:45.392
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:45.392
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:45.456
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x')
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:45.457
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:45.457
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:47.752
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x')
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:47.753
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:47.753
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:51.907
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x' || )
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:51.907
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:51.908
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:51.914
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x' || )
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:51.915
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:51.915
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:52.915
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x' || ch)
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:52.915
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:52.915
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:52.922
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x' || ch)
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:52.922
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:52.923
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:54.424
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x' || ch= )
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:54.424
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:54.425
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:54.432
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x' || ch= )
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:54.432
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:54.433
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:56.934
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x' || ch= 'X')
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:56.934
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:56.934
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:56.941
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x' || ch= 'X')
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:56.942
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:56.942
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:58.942
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x' || ch = 'X')
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:48:58.942
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:48:58.943
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:48:58.975
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x' || ch = 'X')
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:48:58.975
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:48:58.976
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:49:00.192
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch - 'x' || ch = 'X')
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:49:00.193
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:49:00.193
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:49:01.451
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch = 'x' || ch = 'X')
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:49:01.452
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:49:01.452
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:49:01.641
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch = 'x' || ch = 'X')
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:49:01.642
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:49:01.642
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:49:02.960
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch = 'x' || ch = 'X');
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:49:02.960
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:49:02.961
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:49:02.967
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch = 'x' || ch = 'X');
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:49:02.967
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:49:02.968
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:49:06.587
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch = 'x' || ch = 'X');
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:49:06.588
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:49:06.588
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:49:07.610
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch = 'x' || ch = 'X');
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:49:07.611
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:49:07.611
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:49:08.694
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch = 'x' || ch = 'X');
		//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:49:08.696
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:49:08.696
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:49:10.473
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch = 'x' || ch = 'X');
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-07 12:49:10.473
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-07 12:49:10.473
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:49:10.534
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch = 'x' || ch = 'X');
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-07 12:49:10.535
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-07 12:49:10.535
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-07 12:49:12.983
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Day220407 {

	public static void main(String[] args) {
		
//		System.out.println("1" + "2");		//( 12 )	
//		System.out.println(true + "" );		//( true )
//		System.out.println('A' + 'B');		//( AB )
//		System.out.println('1' + 2);		//( 12 )
//		System.out.println('1' + '2');		//( 12 )
//		System.out.println('J' + "ava");	//( Java )
//		System.out.println(true + null);	//( 오류 )
//	------------------------------------------------------
//		다음 중 형변환을 생략할 수 있는 것은? ( 모두 고르시오)
//		byte b = 10;
//		char ch = 'A';
//		int i = 100;
//		long l = 1000L;
//		
//		b = (byte)i; 
//		ch = (char)b;
//		short s = (short)ch;
//		float f = (float)l;
//		i = (int)ch;
//	------------------------------------------------------
//		다음중 변수를 잘못 초기화 한 것은? (모두 고르시오)
//		byte b = 256;		//v
//		char c = '';		//v
//		char answer = 'no';	//v
//		float f = 3.14;		//v
//		double d = 1.4e3f;	//
//		------------------------------------------------------
//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65

//		int x = 2;
//		int y = 5;
//		char c = 'A'; // 'A' 의 문자코드는 65
//
//		System.out.println(y
//		System.out.println(y >= 5 | x < - && x > 2);	//true
//		System.out.println(y += 10 - x++);				//15 - 2 = 13
//		System.out.println(x += 2);						//5
//		System.out.println(!('A' <= c && c <= 'Z'));	//false
//		System.out.println('C' = c);		  C는 67		//2
//		System.out.println('5' - '0');	     53 - 48	//5
//		System.out.println(c + 1);	    		 65 + 1	//66
//		System.out.println(++c);						//B
//		System.out.println(c++);						//B
//		System.out.println(c);							//C
//		------------------------------------------------------
//		아래는 변수 num의 값에 따라 '양수, ' 음수, '0'을 출력하는 코드이다. 삼항
//		연산자를 이용해서 (1)에 알맞은 코드를 넣으시오.
//		[Hint] 삼항 연산자를 두 번 사용하라.
//		int num = 10;
//		System.out.println( /* (1) */ );
//		답
//		int num = 10;
//		System.out.println( (num > 0)? "양수" : (num == 0) ? "0" : "음수");
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 백의 자리 이하를 버리는 코드이다. 만일 변수
//		num의 값이 '456' 이라면 '400'이 되고, '111'이라면 '100'이 된다. (1)에 알맞은
//		코드를 넣으시오.
//
//		int num = 456;
//		System.out.println( /* (1) */ );
//		답
//		int num = 456;
//		System.out.println(num/100*100);
//		------------------------------------------------------
//		아래는 변수 num의 값 중에서 일의 자리를 1로 바꾸는 코드이다. 만일 변수
//		num의 값이 333이라면 331이 되고, 777이라면 771이 된다. (1)에 알맞은
//		 코드를 넣으시오
//
//		int num = 333;
//		System.out.println( /* (1) */ );
//		답
//		int num = 333;
//		System.out.println(num/10*10+1);
//		------------------------------------------------------
//		아래는 변수 num의 값보다 크면서도 가장 가까운 10의 배수에서 변수 num의
//		값을 뺀 나머지를 구하는 코드이다. 예를 들어, 24의 크면서도 가장 가까운 
//		10의 배수는 30이다. 19의 경우 20이고, 81의 경우 90이 된다. 30에서 24를
//		뺀 나머지는 6이기 때문에 변수 num의 값이 24라면 6을 결과로 얻어야한다.
//		(1)에 알맞은 코드를 넣으시오.
//		[Hint] 나머지 연산자를 사용하라.
//
//		int num = 24;
//		System.out.println( /* (1) */ );
//		답		
//		int num = 24;
//		System.out.println(10-num%10);
//		------------------------------------------------------
//		아래는 화씨(Fahrenheit)를 섭씨(Celcius)로 변환하는 코드이다. 변환공식이
//		'C = 5/9 x ( F-32 )'라고 할 때, (1)에 알맞은 코드를 넣으시오. 단, 변환 
//		결과값은 소수점 셋째자리에서 반올림해야한다. (Math.round()를 사용하지
//		않고 처리할 것)
//
//		int fahrenheit = 100;
//		float celcius = ( /* (1) */ );
//
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		
//		int fahrenheit = 100;
//		
//		float celcius = 5/9f *( fahrenheit - 32);
//		System.out.println("Fahrenheit : " + fahrenheit);
//		System.out.println("Celcius : " + celcius);
//		답
//		celcius = (5/9f *( fahrenheit - 32))*(100);
//		celcius = (5/9f *( fahrenheit - 32))*(100)+0.5f;
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f);
//		celcius = (int)((5/9f *( fahrenheit - 32))*(100)+0.5f)/100f;
//		System.out.println("Celcius : " + celcius);
//		------------------------------------------------------
//		다음은 문자형 변수 ch가 영문자(대문자 또는 소문자)이거나 숫자일 때만
//		변수 b의 값이 true가 되도록 하는 코드이다. (1)에 알맞은 코드를 넣으시오.
//		char ch = 'z';
//		boolean b = ( /* (1) */ )
//
//		System.out.println(b);
//		답
//		char ch = '1';		
//		boolean b = ('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')
//											 || ('A' <= ch && ch <= 'Z');
//		System.out.println(b);
//		------------------------------------------------------
//		다음은 대문자를 소문자로 변경하는 코드인데, 문자 ch에 저장된 문자가 
//		대문자인 경우에만 소문자로 변경한다. 문자코드는 소문자가 대문자보다
//		32만큼 더 크다. 예를들어 'A'의 코드는 65이고 'a'의 코드는 97이다.
//		(1) ~ (2)에 알맞은 코드를 넣으시오.
//		char ch = 'A';
//
//		char lowerCase = ( /* (1) */ ) ? ( /* (2) */ ) : ch;
//
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowercase);	
//		답
//		char ch = 'C';
//		
//		char lowerCase = ( 'A' <= ch && ch <= 'Z' ) ? 
//				(char)(ch+32) : ch;
//		
//		System.out.println("ch : " + ch);
//		System.out.println("ch to lowercase : " + lowerCase);	
//		------------------------------------------------------
//		다음 문장들을 조건식으로 표현하라.
//		1. int형 변수가 x가 10보다 크고 20보다 작을 때 true인 조건식
		int x = 10;
		(10 < x && x < 20);
//		2. char형 변수가 ch1가 공백이나 탭이 아닐 때 true인 조건식
		char ch1;
		ch1 == ' ' || ch == '\t';
//		3. char형 변수가 ch2가 'x' 또는 'X'일 때 true인 조건식
		char ch2;
		(ch = 'x' || ch = 'X');
//		4. char형 변수가 ch3가 숫자('0'~'9')일 때 true인 조건식
		
//		5. char형 변수가 ch4가 영문자(대문자 또는 소문자)일 때 true인 조건식
//		6. int형 변수 year가 400으로 나눠떨어지거나 또는 4로 나눠떨어지고 100으로
//		나눠떨어지지 않을 때 true인 조건식
//		7. boolean형 변수 powerOn가 false일 때 true인 조건식
//		8. 문자열 참조변수 str이 "yes" 일 때 true인 조건식

//		1
//		2
//		3
		
//		------------------------------------------------------

		
		
	}
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2024)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
