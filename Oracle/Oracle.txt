계정 활성화
system 계정 접속 후 > alter user 계정명 account unlock identified by 비밀번호;
비밀번호 변경
system 계정 접속 후 > alter user 계정명 identified by 비밀번호;


// distinct >> 중복된 데이터 하나씩만 출력(데이터 삭제는 아님)
select distinct REGION_ID from countries;
// as abc >> 별칭 지정
select country_id as 국가ID, country_name as 국가명 from countries;
// order by sal asc or desc		 >> 오름차순(생략가능), 내림차순 가급적 안쓰는게 좋음
// order by sal asc, deptno desc		, 로 여러개 정렬 가능 
// || 컬럼이나 문자열을 연결
select department_id || department_name as name from departments;
// where 조건문
select * from employees where employee_id = 110;

연산자
- 산술 연산자( + - / *)
- 비교 연산자( = <>(같지 않다) !=(같지않다) >= <=)
- 논리 연산자( and, or, not)
- 집합 연산자( union, union all, minus, intersect )
- SQL 연산자( between, in, like, is null )
between >> 두 값의 범위에 해당하는 데이터만 출력할 때 사용되는 확장 연산자
	select * from EMPLOYEES where EMPLOYEE_ID BETWEEN 120 and 130;

in 연산자 >> ( ) 안에 입력된 문자에 해당하는 데이터만 출력
	select * from EMPLOYEES where FIRST_NAME in('Steven', 'John', 'Peter', 'Payam');

is null >> 데이터가 null 값인 데이터만 출력
	select * from EMPLOYEES where COMMISSION_PCT is null;

like 연산자 >> 문자열 속성에서 부분적으로 일치하는 데이터만 출력 할 때 사용
-- % > 0개 이상의 문자(문자의 내용과 갯수는 상관 없음)
-- _ > 1개의 문자
-- Like 'data%' >> data로 시작하는 문자열
	select * from LOCATIONS where CITY like 'South%';
-- Like '%data' >> data로 끝나는 문자열
	select * from LOCATIONS where STREET_ADDRESS like '%St';
-- Like '%data%' >> data가 포함 된 문자열
-- Like 'data____'( _ 4개) >> data로 시작하는 8개 문자열
	select * from LOCATIONS where city like 'South____';
-- Like '____data'( _ 4개) >> data로 끝나는 8개 문자열


숫자 뿐만 아니라 문자나 날짜 값을 비교하는 것도 가능
예) 'A' < 'C'
    '2020-10-10' < '2022-05-17'
